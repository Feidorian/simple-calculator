{"version":3,"sources":["App.js","components/Result.js","components/KeyPad.js","serviceWorker.js","index.js"],"names":["App","props","state","result","keys","onKey","del","clr","eval","number","parenth","expo","multDiv","addSub","numParenFix1","numParenFix2","parenParenFix","str","testArr","total","length","passed","forEach","item","split","test","run","toString","this","updateState","input","match","replace","expr1","res","Math","sign","slice","expr2","expr3","elimZero","solve","numb","Number","list","map","newInput","key","setState","className","hidden","onChange","event","target","value","includes","Component","ResultComponent","replaceAll","type","readOnly","placeholder","KeyPadComponent","role","name","onClick","nmae","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6bc1d930.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Result from './components/Result';\nimport KeyPad from \"./components/KeyPad\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { result: \"\" };\n        this.keys = {\n            \"(\": () => this.onKey(\"(\"), \"CE\": () => this.del(), \")\": () => this.onKey(\")\"), \"C\": () => this.clr(),\n            \"1\": () => this.onKey(\"1\"), \"2\": () => this.onKey(\"2\"), \"3\": () => this.onKey(\"3\"), \"+\": () => this.onKey(\"+\"),\n            \"4\": () => this.onKey(\"4\"), \"5\": () => this.onKey(\"5\"), \"6\": () => this.onKey(\"6\"), \"-\": () => this.onKey(\"-\"),\n            \"7\": () => this.onKey(\"7\"), \"8\": () => this.onKey(\"8\"), \"9\": () => this.onKey(\"9\"), \"*\": () => this.onKey(\"*\"),\n            \".\": () => this.onKey(\".\"), \"0\": () => this.onKey(\"0\"), \"=\": () => this.eval(), \"/\": () => this.onKey(\"/\")\n        }\n\n        // number definition\n        this.number = /^([+-]?\\d*\\.*\\d+)$/\n        // parenthesis expression definition\n        this.parenth = /\\(([^)|()]+)\\)/\n        // exponent expression definition\n        this.expo = /([+-]?)(\\d*\\.*\\d+)\\*\\*([+-]?\\d*\\.*\\d+)/\n        // multiplication or division  expression definition\n        this.multDiv = /([+-]?\\d*\\.*\\d+)(\\*|\\/)([+-]?\\d*\\.*\\d+)/\n        // addition or subtraction expression definition\n        this.addSub = /([+-]?\\d*\\.*\\d+)(\\+|-)([+-]?\\d*\\.*\\d+)/\n        // for ()() => ()*()\n        this.numParenFix1 = /(\\))(\\d)/\n        // for N() => N*()\n        this.numParenFix2 = /(\\d)(\\()/\n        // for ()N => ()*N\n        this.parenParenFix = /(\\))(\\()/\n    }\n\n    // Assist from JS eval to solve unit operation\n    // Because eval is so unpredictable, \n    solve(str) {\n        return eval(str)\n    }\n\n    // Test suit for test cases. Activated with hidden div input\n    // when hidden div is enabled, enter \"=\" in the input to run tests\n    test() {\n        let testArr = [\n            \"14+18/2*18-7=169\", \"10-9*24/8*6=-152\", \"10/5+10-9*11=-87\", \"3*19*14+8/2=802\", \"10*12-14/2+15=128\",\n            \"15*18+12/3+9=283\", \"14/2-1+3=9\", \"9+15/5*13=48\", \"12/3*12+10=58\", \"8/4*2+18=22\", \"18/6+4*15=63\",\n            \"8*4+9-9+18=50\", \"2-20/5*3=-10\", \"(6+4)**2+(11+10/2)=116\", \"(11+42-5)-(11-4)=41\", \"(17-3)(14-6)-22=90\",\n            \"11*11-6*17+4=23\", \"(9+33-6)/6-3**2=-3\", \"(10+43-5)/6+5**2=33\", \"2(9*5+3**2)+4=112\", \"(6+3)**2+(9-10/5)=88\",\n            \"2-1+5*4*11=221\", \"(10+59-3**2)/(24-4)=3\", \"4(12*6-4**2)+9=233\", \"(19-8)(10+4)+8**2=218\", \"16*7*15+11+17=1708\",\n            \"16*15/5+12=60\", \"2*10+10-8=22\", \"24/4+14*2=34\", \"11*10-12/3=106\", \"8/2(2+2)=16\", \"(13+7)/(2**3-3)*4=16\",\n            \"-5.0=-5\", \"+5.0=5\", \"-.3=-0.3\", \"+.3=0.3\", \"-3(5)**2+2(4-18)+33=-70\", \"2(7+8)**2-12(6(2))=306\",\n            \"(-11+(-18/-9))*-3**2--6=87\", \"(-4**2+-9*-4)--10+-9=21\", \"(-5**3+-6*-5)--4+-6=-97\", // some complex ones \n            \"5.=ERROR\", \"-5.=ERROR\", \"+5.=ERROR\", \"++4=ERROR\", \"+-4=ERROR\", \"1+++2=ERROR\", \"1+-+2=ERROR\"\n        ]\n\n        let total = testArr.length;\n        let passed = 0;\n\n        testArr.forEach((item) => {\n            let [test, res] = item.split(\"=\");\n            if (res === this.run(test).toString()) passed++;\n            // debug: else console.log(\"\\n\\n\" +item+ \"\\n\\n\")\n        });\n        this.updateState(`${passed} passed of ${total}`);\n\n    }\n\n    // lex and parse input \n    run(input) {\n        let match = null;\n\n        // parenthesis fix: js eval does not understand the expression (number)(number)\n        // So tokenize it into (number)*(number)\n        if ((match = input.match(this.parenParenFix))) {\n            input = input.replace(this.parenParenFix, `${match[1]}*${match[2]}`);\n            return this.run(input);\n        }\n\n        // parenthesis fix: js eval does not understand the expression (number)number\n        // So tokenize it into (number)*number\n        else if ((match = input.match(this.numParenFix1))) {\n            // debug: console.log(`${match[0]}, ${match[1]}, ${match[2]}`)\n            input = input.replace(this.numParenFix1, `${match[1]}*${match[2]}`);\n            return this.run(input);\n        }\n\n        // parenthesis fix: js eval does not understand the expression number(number)\n        // So tokenize it into number*(number)\n        else if ((match = input.match(this.numParenFix2))) {\n            // debug: console.log(`${match[0]}, ${match[1]}, ${match[2]}`) \n            input = input.replace(this.numParenFix2, `${match[1]}*${match[2]}`);\n            return this.run(input)\n        }\n\n        // left to right: parse the next parenthesis expression \n        else if ((match = input.match(this.parenth))) {\n            // debug: console.log(`!Parenthesis matchStr: ${match[0]}  matchCaptures: ${match.slice(1)}`) \n            let expr1 = match[1];\n            let res = this.run(expr1)\n            // evaluation resulting in a postive number losses the sign\n            // this is bad for expressions that require sign preservation. i.e 2-3+7 (eval -3+7 = 4, sign is lost, result = 24)\n            // so manually append the positive sign to positive numbers \n            res = (Math.sign(res) === 1) ? `+${res}` : res;\n            //eval only keeps sign for negatives\n            input = input.replace(this.parenth, res);\n            // debug: console.log(`!Parenth  result: ${res} newOutput: ${input}`)\n            return this.run(input);\n        }\n\n        // left to right: parse exponential expression\n        else if ((match = input.match(this.expo))) {\n            // debug: onsole.log(`!Exponent matchStr: ${match[0]}  matchCaptures: ${match.slice(1)}`) \n            let [expr1, expr2, expr3] = match.slice(1);\n            [expr2, expr3] = this.elimZero([expr2, expr3]) // eliminate leading zeros from argument \n            //evaluation of a postive number losses the sign\n            let res = this.solve(`${expr1}(${expr2} ** ${expr3})`)\n            res = (Math.sign(res) === 1) ? `+${res}` : res; //eval only keeps sign for negatives\n            input = input.replace(this.expo, res);\n            // debug: console.log(`!Exponent  result: ${res} newOutput: ${input}`)\n            return this.run(input);\n        }\n        // left to right: parse multiplication and division \n        else if ((match = input.match(this.multDiv))) {\n            let [expr1, expr2] = this.elimZero([match[1], match[3]])\n            // debug: let msg = (match[2] === \"*\") ? \"!Multiplication\" : \"!Division\";\n            // debug: console.log(`${msg} matchStr: ${match[0]}  matchCaptures: ${match.slice(1)}`) */\n\n            //evaluation of a postive number losses the sign\n            let res = this.solve(`${expr1} ${match[2]} ${expr2}`)\n            res = (Math.sign(res) === 1) ? `+${res}` : res; //eval only keeps sign for negatives\n            input = input.replace(this.multDiv, res);\n            // debug: console.log(`${msg}  result: ${res} newOutput: ${input}`)\n            return this.run(input);\n        }\n        // left to right: parse addition and subtraction \n        else if ((match = input.match(this.addSub))) {\n            let [expr1, expr2] = this.elimZero([match[1], match[3]]);\n            // debug: let msg = (match[2] === \"-\") ? \"!Subtraction\" : \"!Addition\";\n            // debug: console.log(`${msg} matchStr: ${match[0]}  matchCaptures: ${match.slice(1)}`) \n            //evaluation of a postive number losses the sign\n            let res = this.solve(`${expr1} ${match[2]} ${expr2}`)\n            res = (Math.sign(res) === 1) ? `+${res}` : res; //eval only keeps sign for negatives\n            input = input.replace(this.addSub, res);\n            // debug: console.log(`${msg}  result: ${res} newOutput: ${input}`)\n            return this.run(input);\n        }\n\n        // parse input as a number \n        // if input made it here, it's either a number or invalid, so match entire string\n        else if ((match = input.match(this.number))) {\n            // debug: console.log(`Number  matchStr: ${match[0]} matchCaptures: ${match.slice(1)}`)  \n            let numb = this.elimZero([match[1]]);\n            let res = this.solve(numb);\n            // debug: console.log(`!Number result: ${res} newOutput: ${res}`)\n            return Number(res); // nomalize number : (+5 => 5) and (.5 => 0.5)\n        }\n\n        // input could not be parsed and evaluated in a way that resulted in a number, therefore is invalid \n        else return \"ERROR\";\n\n    }\n\n    // so JS eval hates leading 0's. We'll make them disappear here, before spoon feeding it the numbers\n    elimZero(list) {\n        let match = null;\n        return list.map((number) => {\n            let zCantLead = /^([+-]?)0+(?=(:?0\\.\\d|\\d))(.+)/\n            number = ((match = number.match(zCantLead))) ? `${match[1]}${match[3]}` : number\n            return number; \n        })\n    }\n\n    clr() { this.updateState(\"\"); }\n\n    del() {\n        let newInput = (this.state.result === \"ERROR\") ? \"\" : this.state.result.slice(0, -1);\n        this.updateState(newInput);\n    }\n\n    onKey(key) { this.updateState(this.state.result + key); }\n\n    updateState(newInput) { this.setState({ result: newInput.toString() }); }\n\n    eval() {\n        let str = this.state.result;\n        if (str === \"\") return;\n        this.updateState(this.run(str));\n        // debug: console.log(\"\\n\\n\"); \n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"calculator-body\">\n                    <div className=\"container-fluid position-absolute top-50 start-50 translate-middle\">\n                        <h1 className=\"text-center\">Basic Calculator</h1>\n                        <div className=\"row g-0 row-cols-4 justify-content-center w-25 h-100 mx-auto border border-3 border-dark frame\">\n                            <Result input={this.state.result} />\n                            <KeyPad keys={this.keys} />\n                        </div>\n\n                        {/* Text input for fast expression testing (copy/paste evaluation + test cases). currrently hidden, enable to use.*/}\n                        <div hidden className=\"row mx-auto w-25 mt-3\"><input onChange={(event) => {\n                            // run test cases \n                            if (event.target.value.includes(\"=\")) this.test();\n                            // evaluate expression from the input\n                            else if (event.target.value.includes(\"_\")) this.eval();\n                            // copy values from input to calculator \n                            else this.updateState(event.target.value.replace(/\\s/g, \"\"))\n                        }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\n\nexport default App;","import React, { Component } from 'react';\n\n\nclass ResultComponent extends Component {\n\n\n    render() {\n        // formatting to make displayed input look prettier\n        // Also we get to have the exponent operator display like an exponent '^' instead of '**'\n        let str = this.props.input.replaceAll(\"/\", \"÷\").replaceAll(\"**\", \"^\").replaceAll(\"*\", \"×\");\n        \n    \n        return (\n            <div className=\"result w-100\">\n                <div className=\"col w-100 h-100\">\n                    <input className=\"form-control-plaintext bg-dark bg-gradient display fs-1 w-100 h-100\" value={str} type=\"text\"  readOnly placeholder=\"\"/> \n                </div>       \n            </div>\n    )\n        ;\n    }\n}\n\n\nexport default ResultComponent;","import React, {Component} from 'react';\n\nclass KeyPadComponent extends Component {\n\n    render() {\n            return (\n                <div className=\"col w-100 h-25\">\n                    <div className=\"btn-toolbar\">\n                            <div className=\"btn-group btn-group-lg border rounded-0 w-100 h-100 \" role=\"group\">\n                            <button className=\"btn btn-light fs-1 w-25 h-100 op-buttons\"\n                                type=\"button\" name=\"(\" onClick={this.props.keys[\"(\"]}>(</button>\n                            <button className=\"btn btn-light fs-1 w-25 h-100 op-buttons\"\n                                type=\"button\" name=\"CE\" onClick={this.props.keys[\"CE\"]}>CE</button>\n                            <button className=\"btn btn-light fs-1 w-25 h-100 op-buttons\"\n                                type=\"button\" name=\")\" onClick={this.props.keys[\")\"]}>)</button>\n                            <button className=\"btn btn-light fs-1 w-25 h-100 op-buttons\"\n                                type=\"button\" name=\"C\" onClick={this.props.keys[\"C\"]}>C</button></div>\n                            <div className=\"btn-group btn-group-lg border rounded-0 w-100 h-100\" role=\"group\">\n                            <button className=\"btn btn-light fs-1 w-25 h-100 num-buttons\"\n                                name=\"1\" type=\"button \" onClick={this.props.keys[\"1\"]}>1</button>\n                            <button className=\"btn btn-light w-25 fs-1 h-100 num-buttons\" type=\"button\"\n                                name=\"2\"  onClick={this.props.keys[\"2\"]}>2</button>\n                            <button className=\"btn btn-light w-25 fs-1 h-100 num-buttons\" type=\"button\"\n                                name=\"3\"  onClick={this.props.keys[\"3\"]}>3</button>\n                            <button className=\"btn btn-warning w-25 fs-1 h-100 \" type=\"button\"\n                                name=\"+\"  onClick={this.props.keys[\"+\"]}>+</button></div>\n                            <div className=\"btn-group btn-group-lg border rounded-0 w-100 h-100\" role=\"group\">\n                            <button className=\"btn btn-light fs-1 w-25 h-100 num-buttons\" type=\"button\"\n                                name=\"4\" onClick={this.props.keys[\"4\"]}>4</button>\n                            <button className=\"btn btn-light w-25 fs-1 h-100 num-buttons\" type=\"button\"\n                                nmae=\"5\" onClick={this.props.keys[\"5\"]}>5</button>\n                            <button className=\"btn btn- w-25 fs-1 h-100 num-buttons\" type=\"button\"\n                                name=\"6\" onClick={this.props.keys[\"6\"]}>6</button>\n                            <button className=\"btn btn-warning w-25 fs-1 h-100\" type=\"button\"\n                                name=\"-\" onClick={this.props.keys[\"-\"]}>−</button></div>\n                            <div className=\"btn-group btn-group-lg border rounded-0 w-100 h-100\" role=\"group\">\n                            <button className=\"btn btn-light fs-1 w-25 h-100 num-buttons\" type=\"button\"\n                                name=\"7\" onClick={this.props.keys[\"7\"]}>7</button>\n                            <button className=\"btn btn-light w-25 fs-1 h-100 num-buttons\" type=\"button\"\n                                name=\"8\" onClick={this.props.keys[\"8\"]}>8</button>\n                            <button className=\"btn btn-light w-25 fs-1 h-100 num-buttons\" type=\"button\"\n                                name=\"9\" onClick={this.props.keys[\"9\"]}>9</button>\n                            <button className=\"btn btn-warning w-25 fs-1 h-100\" type=\"button\"\n                                name=\"di\" onClick={this.props.keys[\"*\"]}>×</button></div>\n                            <div className=\"btn-group btn-group-lg border rounded-0 w-100 h-100\" role=\"group\">\n                            <button className=\"btn btn-light fs-1 w-25 h-100 num-buttons\" type=\"button\"\n                                name=\".\" onClick={this.props.keys[\".\"]}>.</button>\n                            <button className=\"btn btn-light w-25 fs-1 h-100 num-buttons\" type=\"button\"\n                                name=\"0\" onClick={this.props.keys[\"0\"]}>0</button>\n                            <button className=\"btn btn-warning h-100 w-25 fs-1\" type=\"button\"\n                                name=\"=\" onClick={this.props.keys[\"=\"]}>=</button>\n                            <button className=\"btn btn-warning w-25 h-100 fs-1\" type=\"button\"\n                                name=\"÷\" onClick={this.props.keys[\"/\"]}>÷</button></div>\n                    </div>\n                </div>\n    \n                \n            );\n        }\n}\n\n\nexport default KeyPadComponent;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}